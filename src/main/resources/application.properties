spring.datasource.url = jdbc:mysql://localhost:3306/borrowerappschema?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username =root
spring.datasource.password =root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
Server.Port=9080
#spring.jpa.open-in-view=false
#app.api.swagger.enable=true
############################## mail- config #################################
spring.mail.protocol=smtp
spring.mail.host=mail.arthavedika.com
spring.mail.port=587
spring.mail.username=test1@arthavedika.com
spring.mail.password=AV123
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
####################################AuthMessages####################################
SignInOk=Borrower is sign in successfully
SignInWrongCredential= Credential are wrong
SignInError=Error in sign in
SignInUpdationError=Error in updating sign in detais of Borrower
SignUpBorrowerWrongCredential= Borrower does not exist
SignUpBorrowerExist=Borrower exist.kindly continue with sign up procedure.
SignUpError=Error in signup
OTPVerified=OTp is verified. Please proceed further.
SignUpOk=Borrower is signed up successfully.
IncorrectOTP=Please enter valid OTP
OtpgenerationError=OTP is not generated.
UserExist=User_Id already exist.
Mpinchanged=Mpin is changed successfully
####################################BorrowerMessages####################################
PersonaldtlsFetched= personal details of borrower are fetched successfully
PersonaldtlsFetchedError= borrower does not exist .
BorrowerNoLoan= Borrower does not have any loan.
LoanNoFetched=Loan number of corresponding borrower is fetched succesfully
LoanNotAvailable=Loan details are not available
LoanDtlsFetched=Loan details sre fetched successfully
HeplMessageSaved= Help message is saved successfully. Your request number is
HelpMessageAlreadyExist=This message is alredy dsaved with request number =
EMIDtlsFetched=Emi details are fetched successfully 
EMIDtlsNotAvailable=Emi details are not available for corresponding loan number
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
# hibernate properties
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update
#spring.mvc.hiddenmethod.filter.enabled=true





